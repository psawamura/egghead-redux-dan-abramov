{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; // ReactDOM.render(<App />, document.getElementById('root'));\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n// import { createStore } from 'redux';\n\nfunction counter(state, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n\n    case 'DECREMENT':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nexpect(counter(0, {\n  type: 'INCREMENT'\n})).toEqual(1); // const store = createStore(counter);\n// store.subscribe(() => {\n//     document.body.innerText = store.getState();\n// });\n// document.addEventListener('click', () => {\n//     store.dispatch({ type: 'INCREMENT' });\n// });","map":{"version":3,"sources":["/Users/sawamurap/redux-tutorial/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","counter","state","action","type","expect","toEqual"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAOF,KAAK,GAAG,CAAf;;AACJ,SAAK,WAAL;AACI,aAAOA,KAAK,GAAE,CAAd;;AACJ;AACI,aAAOA,KAAP;AANR;AAQH;;AAEDG,MAAM,CACFJ,OAAO,CAAC,CAAD,EAAI;AAACG,EAAAA,IAAI,EAAE;AAAP,CAAJ,CADL,CAAN,CAEEE,OAFF,CAEU,CAFV,E,CAOA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n// import { createStore } from 'redux';\n\nfunction counter(state, action) {\n    switch (action.type) {\n        case 'INCREMENT':\n            return state + 1;\n        case 'DECREMENT':\n            return state -1;\n        default:\n            return state;\n    }\n}\n\nexpect(\n    counter(0, {type: 'INCREMENT'})\n).toEqual(1);\n\n\n\n\n// const store = createStore(counter);\n\n// store.subscribe(() => {\n//     document.body.innerText = store.getState();\n// });\n\n// document.addEventListener('click', () => {\n//     store.dispatch({ type: 'INCREMENT' });\n// });"]},"metadata":{},"sourceType":"module"}